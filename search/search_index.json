{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Intro \u00b6 Haremos un creador de tiny url (URL shortener), aplicaremos conceptos de CS como: REST APIs Web development key-val databases, Redis HTTP verbs HTTP responses usara la libreria redis para trabajar App \u00b6 La aplicacion se vera asi: La app tendra por lo menos 3 vistas (3 rutas): / : Crear tinyURL /urls : lista de URLs /stats : estadistica de clicks y visitas Nota \u00b6 Es importante que su aplicacion tenga un dominio, casi en todos los proyectos hemos trabajado con 127.0.0.1:5000 pero ese no es un dominio real, para usar un nombre de dominio hay varias maneras, gratis /etc/hosts nip.io [Recomendado] se puede no usar dominio y seguir usando 127.0.0.1:5000 se puede obtener dinamicamente el HOST url con el Host Header","title":"Index"},{"location":"#intro","text":"Haremos un creador de tiny url (URL shortener), aplicaremos conceptos de CS como: REST APIs Web development key-val databases, Redis HTTP verbs HTTP responses usara la libreria redis para trabajar","title":"Intro"},{"location":"#app","text":"La aplicacion se vera asi: La app tendra por lo menos 3 vistas (3 rutas): / : Crear tinyURL /urls : lista de URLs /stats : estadistica de clicks y visitas","title":"App"},{"location":"#nota","text":"Es importante que su aplicacion tenga un dominio, casi en todos los proyectos hemos trabajado con 127.0.0.1:5000 pero ese no es un dominio real, para usar un nombre de dominio hay varias maneras, gratis /etc/hosts nip.io [Recomendado] se puede no usar dominio y seguir usando 127.0.0.1:5000 se puede obtener dinamicamente el HOST url con el Host Header","title":"Nota"},{"location":"entrega/","text":"web \u00b6 utilizar layout.html utilizar herencia de layouts 404, 200, 301 ...... response code handling Requerido (MUST) \u00b6 Use Flask como backend (for now) Use Redis como la DB Use Redis para almacenar cualquier otra informacion o detalles, Redis le provee hasta 16 bases de datos (JSON respond) Dockerfile y Docker Hub repository. Un buen html/css layout de su propia autoria, NO PUEDE USAR ALGO HECHO POR ALGUIEN MAS. Modularize todo con modulos, imports, etc. NO VA A CORRER USANDO python , sino que usando Docker, cualquier proyecto que no entregue usando docker sera descalificado. Debe proveer informacion necesaria en el [READMEs Usage] en como correr su proyecto usando comandos de docker. Cada integrante debe tener commits en el historial. Video de 10 minutos maximo en donde hagan funcionar su proyecto y lo expliquen todos los integrantes del grupo. You already now how to deliever it ;) \u00b6 FORK it (tiene que hacer FORK de este proyecto) WORK it DELIVER it","title":"Entrega"},{"location":"entrega/#web","text":"utilizar layout.html utilizar herencia de layouts 404, 200, 301 ...... response code handling","title":"web"},{"location":"entrega/#requerido-must","text":"Use Flask como backend (for now) Use Redis como la DB Use Redis para almacenar cualquier otra informacion o detalles, Redis le provee hasta 16 bases de datos (JSON respond) Dockerfile y Docker Hub repository. Un buen html/css layout de su propia autoria, NO PUEDE USAR ALGO HECHO POR ALGUIEN MAS. Modularize todo con modulos, imports, etc. NO VA A CORRER USANDO python , sino que usando Docker, cualquier proyecto que no entregue usando docker sera descalificado. Debe proveer informacion necesaria en el [READMEs Usage] en como correr su proyecto usando comandos de docker. Cada integrante debe tener commits en el historial. Video de 10 minutos maximo en donde hagan funcionar su proyecto y lo expliquen todos los integrantes del grupo.","title":"Requerido (MUST)"},{"location":"entrega/#you-already-now-how-to-deliever-it","text":"FORK it (tiene que hacer FORK de este proyecto) WORK it DELIVER it","title":"You already now how to deliever it ;)"},{"location":"extras/","text":"Extras \u00b6 Estas son algunas sugerencias de puntos extra: una vista de /admin en donde se pueda administrar la base de datos completa, se puede hacer flush all de todas las URLs etc. una vista de /load en donde se cargue un csv (tinyURL,originalURL) y se inserte el contenido a la DB. una vista de /search en donde se puede buscar alguna URL en especifico. hacer registro de la hora en la que se creo el entry y tambien mostrar eso en las vistas de /stats & /urls hacer registro usando dicts, key: hashID y value: {\"url\": \"long-url.com\"} info aqui","title":"4. Extras"},{"location":"extras/#extras","text":"Estas son algunas sugerencias de puntos extra: una vista de /admin en donde se pueda administrar la base de datos completa, se puede hacer flush all de todas las URLs etc. una vista de /load en donde se cargue un csv (tinyURL,originalURL) y se inserte el contenido a la DB. una vista de /search en donde se puede buscar alguna URL en especifico. hacer registro de la hora en la que se creo el entry y tambien mostrar eso en las vistas de /stats & /urls hacer registro usando dicts, key: hashID y value: {\"url\": \"long-url.com\"} info aqui","title":"Extras"},{"location":"run/","text":"Run \u00b6 Su aplicacion debe correr 100% en docker y docker-compose, instalar redis en su OS no es una opcion. Yo le proveo con un scratch project donde ya tengo configurado redis y la app. Basta con correr docker-compose up --build eso corre: - app sencilla de python - redis - app conectada a redis # DEBE CORRER USANDO DOCKER # example 1 docker run -it -p 8080 :8080 your-image/love-my-movies:1.20 # example 2 docker-compose up","title":"Run"},{"location":"run/#run","text":"Su aplicacion debe correr 100% en docker y docker-compose, instalar redis en su OS no es una opcion. Yo le proveo con un scratch project donde ya tengo configurado redis y la app. Basta con correr docker-compose up --build eso corre: - app sencilla de python - redis - app conectada a redis # DEBE CORRER USANDO DOCKER # example 1 docker run -it -p 8080 :8080 your-image/love-my-movies:1.20 # example 2 docker-compose up","title":"Run"},{"location":"stats/","text":"Stats \u00b6 En esta vista se mostraran las estadisticas de cada URL. Tiny URL Original URL Visitas: cantidad de visitas que esa URL ha tenido. tinyURL Original URL Visitas http://mi-dominio.com/sasd3av https://miu.ufm.edu/mis_cursos_detalle.php 4 http://mi-dominio.com/1wsqzdf https://docs.google.com/document/d/1 23 http://mi-dominio.com/correo https://mail.google.com/mail/u/ 50 Para esto ud debe ingeniar como guardar (que key usar) para el valor de los visitas, un visita cuenta como cada vez que un tinyURL es usado; esta seccion es muy similar a la anterior con la a\u00f1adicion de las visitas. Para esta parte debe ir a la DB a traer: tinyURL,OriginalURL (key,val) Visitas para esa tinyURL (key= tinyURL_visits, val = N) Mockup \u00b6 observe la ruta en el mockup","title":"3. Stats"},{"location":"stats/#stats","text":"En esta vista se mostraran las estadisticas de cada URL. Tiny URL Original URL Visitas: cantidad de visitas que esa URL ha tenido. tinyURL Original URL Visitas http://mi-dominio.com/sasd3av https://miu.ufm.edu/mis_cursos_detalle.php 4 http://mi-dominio.com/1wsqzdf https://docs.google.com/document/d/1 23 http://mi-dominio.com/correo https://mail.google.com/mail/u/ 50 Para esto ud debe ingeniar como guardar (que key usar) para el valor de los visitas, un visita cuenta como cada vez que un tinyURL es usado; esta seccion es muy similar a la anterior con la a\u00f1adicion de las visitas. Para esta parte debe ir a la DB a traer: tinyURL,OriginalURL (key,val) Visitas para esa tinyURL (key= tinyURL_visits, val = N)","title":"Stats"},{"location":"stats/#mockup","text":"observe la ruta en el mockup","title":"Mockup"},{"location":"tiny-urls/","text":"Tiny URLs \u00b6 Modo Normal \u00b6 En esta vista se podra generar un tinyURL, el usuario ingresa una URL cualquiera ( www.google.com por ejemplo) apachara el boton magico y su app debera hacer lo siguiente: Recibir la URL Generar un \"token/identificador\" unico (ejemplo: cyu3tzA) Guardar ese token en la base de datos (key-val) donde el \"token\" sera el key y la URL sera el val Debera responder con la tinyURL generada al usuario. el generador puede ser una funcion de SU AUTORIA. Modo Custom \u00b6 En esta modalidad sucedera todo lo anterior con la excepcion del paso \"2\" en donde el usuario ademas del URL tambien podra ingresar un customID (palabra unica que identifique a su URL) Ejemplo: URL: www.google.com customID: mi-url Resultado = > http://su-dominio.com/mi-url Al resultado puede agregarle un boton de \"copy\" Funcionamiento \u00b6 Cuando el usuario pegue en su browser, obviamente su aplicacion respondera y recibira este request debera REDIRECT al usuario a la URL original. Esto quiere decir que su app debe responder con el \"response code\" CORRECTO!. Ejemplo: Browser: http://su-dominio.com/mi-url App: recibe [http://su-dominio.com/mi-url] Browser: [redirect] www.google.com Mockup \u00b6 observe la ruta en el mockup Ejemplos \u00b6 https://tinyurl.com/ https://tiny.cc/ Creame todo lo vimos en clase.","title":"1. Tiny URLS"},{"location":"tiny-urls/#tiny-urls","text":"","title":"Tiny URLs"},{"location":"tiny-urls/#modo-normal","text":"En esta vista se podra generar un tinyURL, el usuario ingresa una URL cualquiera ( www.google.com por ejemplo) apachara el boton magico y su app debera hacer lo siguiente: Recibir la URL Generar un \"token/identificador\" unico (ejemplo: cyu3tzA) Guardar ese token en la base de datos (key-val) donde el \"token\" sera el key y la URL sera el val Debera responder con la tinyURL generada al usuario. el generador puede ser una funcion de SU AUTORIA.","title":"Modo Normal"},{"location":"tiny-urls/#modo-custom","text":"En esta modalidad sucedera todo lo anterior con la excepcion del paso \"2\" en donde el usuario ademas del URL tambien podra ingresar un customID (palabra unica que identifique a su URL) Ejemplo: URL: www.google.com customID: mi-url Resultado = > http://su-dominio.com/mi-url Al resultado puede agregarle un boton de \"copy\"","title":"Modo Custom"},{"location":"tiny-urls/#funcionamiento","text":"Cuando el usuario pegue en su browser, obviamente su aplicacion respondera y recibira este request debera REDIRECT al usuario a la URL original. Esto quiere decir que su app debe responder con el \"response code\" CORRECTO!. Ejemplo: Browser: http://su-dominio.com/mi-url App: recibe [http://su-dominio.com/mi-url] Browser: [redirect] www.google.com","title":"Funcionamiento"},{"location":"tiny-urls/#mockup","text":"observe la ruta en el mockup","title":"Mockup"},{"location":"tiny-urls/#ejemplos","text":"https://tinyurl.com/ https://tiny.cc/ Creame todo lo vimos en clase.","title":"Ejemplos"},{"location":"url-list/","text":"URLS \u00b6 En esta vista se mostraran todas las URLs convertidas hasta el momento, sera mostrado en una tabla a 2 columnas tinyURL Original URL http://mi-dominio.com/sasd3av https://miu.ufm.edu/mis_cursos_detalle.php http://mi-dominio.com/1wsqzdf https://docs.google.com/document/d/1 http://mi-dominio.com/correo https://mail.google.com/mail/u/ Esto se obtiene yendo a la base de datos (Redis) recorrer los keys,vals y renderizar esos resultados. La ultima opcion es que el usuario podra borrar una URL especifica con un boton o como ud prefiera; En un web app la manera correcta para borrar un recurso es usando el verbo DELETE ; Al elegir borrar la URL debera de ir a la base de datos y borrar el entry. Mockup \u00b6 observe la ruta en el mockup Extra \u00b6 Si gusta puede implementar un metodo \"search\" que con un search-box le permita al usuario hacer un busqueda de las URLS o tiny URLs.","title":"2. URL list"},{"location":"url-list/#urls","text":"En esta vista se mostraran todas las URLs convertidas hasta el momento, sera mostrado en una tabla a 2 columnas tinyURL Original URL http://mi-dominio.com/sasd3av https://miu.ufm.edu/mis_cursos_detalle.php http://mi-dominio.com/1wsqzdf https://docs.google.com/document/d/1 http://mi-dominio.com/correo https://mail.google.com/mail/u/ Esto se obtiene yendo a la base de datos (Redis) recorrer los keys,vals y renderizar esos resultados. La ultima opcion es que el usuario podra borrar una URL especifica con un boton o como ud prefiera; En un web app la manera correcta para borrar un recurso es usando el verbo DELETE ; Al elegir borrar la URL debera de ir a la base de datos y borrar el entry.","title":"URLS"},{"location":"url-list/#mockup","text":"observe la ruta en el mockup","title":"Mockup"},{"location":"url-list/#extra","text":"Si gusta puede implementar un metodo \"search\" que con un search-box le permita al usuario hacer un busqueda de las URLS o tiny URLs.","title":"Extra"}]}